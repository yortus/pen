Todo:
    [ ] add UMD build using webpack, as per how `multimethods` does it
    [x] add math expression grammar as test fixture
    [x] add API function to parse a grammar and return AST (temporary)
    add API function to parse a grammar and spit out source for a `parse()` function:
        [ ] add internal function to visit all AST nodes depth-first (preorder or postorder?)
        [ ] add internal emitter backend function that generates `parse()` source code
        [ ] ...profit?
    [ ] add API function to parse a grammar and spit out source for an `unparse()` function
  


24 Nov:
    [ ] way to add newline spacing between decls in emitted TS?
    [ ] only need `start` prop if binding value isn't a combinator factory call (eg string lits, simple delegation)
        [ ] `function isCombinator(astNode) {...}`
    revise lingo:
        [ ] <...check how used by other projects/papers...>
        [ ] combinator --> (parse/unparse) primitive -or- primitive parser/unparser
        [ ] combinator factory/constructor --> (parser/unparser) combinator
    [ ] doc resemblence of combinators to generic types that need 'instantiation' to make types
